/*!
 @header Img3Parser.h
 @project Pusher
 @author Alexander Maksimenko
 @copyright Copyright (c) 2009 Ripdev. All rights reserved.
 */

struct hImg3
{
	unsigned int magic;
	unsigned int size;
	unsigned int imageSize;
	unsigned int shshOffset;
	unsigned int name;
};

struct hImg3Element
{
	unsigned int magic;
	unsigned int size;
	unsigned int dataSize;
};

typedef struct hImg3 hImg3;
typedef struct hImg3Element hImg3Element;

struct Img3Element
{
	hImg3Element header;
	void* data;
	void* nextElement;
};

typedef struct Img3Element Img3Element;

int parseImg3(const char* filename, hImg3* pHeaderImg3, Img3Element* pElement, hKernel* pHeaderKernel, hBootIm* pHeaderBootIm, int* pFlags, int extract, const char* output, const char* key, const char* iv);
int extractImg3File(Img3Element* pElement, hKernel* pHeaderKernel, hBootIm* pHeaderBootIm, int* pFlags, const char* filename, const char* key, const char* iv);
int doImg3File(const char* filename, hImg3* pHeaderImg3, Img3Element* pElement, hKernel* pHeaderKernel, hBootIm* pHeaderBootIm, int* pFlags, const char* output, const char* key, const char* iv);
Img3Element* getDataElement(Img3Element* pElement);
unsigned int getElementsSize(Img3Element* pElement);
unsigned int getSHSHOffset(Img3Element* pElement);
void freeElements(Img3Element* pElement);

void aes_decrypt(void* p, unsigned int size, const char* key, const char* iv);
void aes_encrypt(void* p, unsigned int size, const char* key, const char* iv);
